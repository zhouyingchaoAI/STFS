from enum import Enum

class WeatherType(Enum):
    """天气类型编号枚举 - 合并为15类用于地铁客流预测"""

    # 保持原有枚举名称，但将value合并为6类
    多云____多云 = 1  # 多云阴天类
    晴____晴 = 0  # 晴好天气类
    多云____中雨 = 2  # 一般降雨类
    阴____阴 = 1  # 多云阴天类
    小雨____小雨 = 2  # 一般降雨类
    小雨____阴 = 1  # 多云阴天类（转阴）
    小雨____多云 = 2  # 一般降雨类（以小雨为主）
    中雨____中雨 = 2  # 一般降雨类
    多云____小雨 = 2  # 一般降雨类（转小雨）
    小雨____中雨 = 2  # 一般降雨类
    小雨____小雪 = 4  # 雪类天气
    大雪____阴 = 1  # 多云阴天类（转阴）
    中雨____雨夹雪 = 2  # 一般降雨类（以中雨为主）
    小雪____阴 = 1  # 多云阴天类（转阴）
    雨夹雪____大雪 = 4  # 雪类天气
    多云____阴 = 1  # 多云阴天类
    雨夹雪____雨夹雪 = 4  # 雪类天气
    雨夹雪____阴 = 1  # 多云阴天类（转阴）
    阴____雨夹雪 = 4  # 雪类天气
    大雪____大雪 = 4  # 雪类天气
    阴____多云 = 1  # 多云阴天类
    中雨____多云 = 1  # 多云阴天类（转多云）
    晴____多云 = 0  # 晴好天气类（以晴为主）
    中雨____小雨 = 2  # 一般降雨类
    多云____晴 = 0  # 晴好天气类（转晴）
    小雨____大雨 = 3  # 强降雨类
    大雨____阴 = 1  # 多云阴天类（转阴）
    中雨____阴 = 1  # 多云阴天类（转阴）
    中雨____大雨 = 2  # 一般降雨类（以中雨为主）
    大雨____大雨 = 3  # 强降雨类
    小雨____晴 = 0  # 晴好天气类（转晴）
    中雨____暴雨 = 2  # 一般降雨类（以中雨为主）
    阴____晴 = 0  # 晴好天气类（转晴）
    阴____小雨 = 2  # 一般降雨类
    阴____中雨 = 2  # 一般降雨类
    小雨____雨夹雪 = 4  # 雪类天气
    大雨____小雨 = 2  # 一般降雨类（转小雨）
    晴____阴 = 0  # 晴好天气类（以晴为主）
    多云____大雨 = 3  # 强降雨类
    晴____中雨 = 0  # 晴好天气类（以晴为主）
    大雨____中雨 = 2  # 一般降雨类（转中雨）
    阵雨____多云 = 2  # 一般降雨类（阵雨归入降雨）
    阵雨____晴 = 0  # 晴好天气类（转晴）
    晴____小雨 = 0  # 晴好天气类（以晴为主）
    阵雨____小雨 = 2  # 一般降雨类
    雨夹雪____暴雪 = 4  # 雪类天气
    中雪____多云 = 1  # 多云阴天类（转多云）
    晴____雨夹雪 = 0  # 晴好天气类（以晴为主）
    冻雨____阴 = 1  # 多云阴天类（转阴）
    冻雨____冻雨 = 4  # 雪类天气（冻雨归入雪类）
    冻雨____雨夹雪 = 4  # 雪类天气
    雨夹雪____小雪 = 4  # 雪类天气
    小雪____多云 = 1  # 多云阴天类（转多云）
    雨夹雪____小雨 = 2  # 一般降雨类
    暴雨____中雨 = 2  # 一般降雨类（转中雨）
    大雨____暴雨 = 3  # 强降雨类
    暴雨____暴雨 = 3  # 强降雨类
    暴雨____小雨 = 2  # 一般降雨类（转小雨）
    大雨____多云 = 1  # 多云阴天类（转多云）
    小雨____暴雨 = 3  # 强降雨类
    未知 = 5  # 未知天气

    @classmethod
    def get_all_types(cls):
        """获取所有天气类型编号"""
        return [weather.value for weather in cls]

    @classmethod
    def get_weather_by_name(cls, name: str):
        """通过原始名称获取天气类型枚举，无法查到的返回未知"""
        mapping = {
            "多云 /  多云": cls.多云____多云,
            "晴 /  晴": cls.晴____晴,
            "多云 /  中雨": cls.多云____中雨,
            "阴 /  阴": cls.阴____阴,
            "小雨 /  小雨": cls.小雨____小雨,
            "小雨 /  阴": cls.小雨____阴,
            "小雨 /  多云": cls.小雨____多云,
            "中雨 /  中雨": cls.中雨____中雨,
            "多云 /  小雨": cls.多云____小雨,
            "小雨 /  中雨": cls.小雨____中雨,
            "小雨 /  小雪": cls.小雨____小雪,
            "大雪 /  阴": cls.大雪____阴,
            "中雨 /  雨夹雪": cls.中雨____雨夹雪,
            "小雪 /  阴": cls.小雪____阴,
            "雨夹雪 /  大雪": cls.雨夹雪____大雪,
            "多云 /  阴": cls.多云____阴,
            "雨夹雪 /  雨夹雪": cls.雨夹雪____雨夹雪,
            "雨夹雪 /  阴": cls.雨夹雪____阴,
            "阴 /  雨夹雪": cls.阴____雨夹雪,
            "大雪 /  大雪": cls.大雪____大雪,
            "阴 /  多云": cls.阴____多云,
            "中雨 /  多云": cls.中雨____多云,
            "晴 /  多云": cls.晴____多云,
            "中雨 /  小雨": cls.中雨____小雨,
            "多云 /  晴": cls.多云____晴,
            "小雨 /  大雨": cls.小雨____大雨,
            "大雨 /  阴": cls.大雨____阴,
            "中雨 /  阴": cls.中雨____阴,
            "中雨 /  大雨": cls.中雨____大雨,
            "大雨 /  大雨": cls.大雨____大雨,
            "小雨 /  晴": cls.小雨____晴,
            "中雨 /  暴雨": cls.中雨____暴雨,
            "阴 /  晴": cls.阴____晴,
            "阴 /  小雨": cls.阴____小雨,
            "阴 /  中雨": cls.阴____中雨,
            "小雨 /  雨夹雪": cls.小雨____雨夹雪,
            "大雨 /  小雨": cls.大雨____小雨,
            "晴 /  阴": cls.晴____阴,
            "多云 /  大雨": cls.多云____大雨,
            "晴 /  中雨": cls.晴____中雨,
            "大雨 /  中雨": cls.大雨____中雨,
            "阵雨 /  多云": cls.阵雨____多云,
            "阵雨 /  晴": cls.阵雨____晴,
            "晴 /  小雨": cls.晴____小雨,
            "阵雨 /  小雨": cls.阵雨____小雨,
            "雨夹雪 /  暴雪": cls.雨夹雪____暴雪,
            "中雪 /  多云": cls.中雪____多云,
            "晴 /  雨夹雪": cls.晴____雨夹雪,
            "冻雨 /  阴": cls.冻雨____阴,
            "冻雨 /  冻雨": cls.冻雨____冻雨,
            "冻雨 /  雨夹雪": cls.冻雨____雨夹雪,
            "雨夹雪 /  小雪": cls.雨夹雪____小雪,
            "小雪 /  多云": cls.小雪____多云,
            "雨夹雪 /  小雨": cls.雨夹雪____小雨,
            "暴雨 /  中雨": cls.暴雨____中雨,
            "大雨 /  暴雨": cls.大雨____暴雨,
            "暴雨 /  暴雨": cls.暴雨____暴雨,
            "暴雨 /  小雨": cls.暴雨____小雨,
            "大雨 /  多云": cls.大雨____多云,
            "小雨 /  暴雨": cls.小雨____暴雨,
        }
        return mapping.get(name, cls.未知)

# 6个简化天气类型说明
SIMPLIFIED_WEATHER_TYPES = {
    0: "晴好天气",   # 晴天、多云转晴等，对客流影响最小
    1: "多云阴天",   # 多云、阴天等，轻微影响客流
    2: "一般降雨",   # 小雨、中雨、阵雨等，中等影响客流
    3: "强降雨",     # 大雨、暴雨等，严重影响客流
    4: "雪类天气",   # 各种雪、雨夹雪、冻雨等，复杂影响客流
    5: "未知"       # 未知天气
}

def get_weather_type_name(value: int) -> str:
    """根据天气类型值获取天气名称"""
    return SIMPLIFIED_WEATHER_TYPES.get(value, "未知")

def get_weather_impact_level(value: int) -> str:
    """获取天气对地铁客流的影响程度"""
    impact_mapping = {
        0: "最小影响",    # 晴好天气
        1: "轻微影响",    # 多云阴天
        2: "中等影响",    # 一般降雨
        3: "严重影响",    # 强降雨
        4: "复杂影响",    # 雪类天气
        5: "未知影响"     # 未知
    }
    return impact_mapping.get(value, "未知影响")